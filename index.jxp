<%
/* If there is one post, show it.  If there is more than one post, display a page
 * of post snippets.  If there are no posts, display a default empty blog page.
 */

core.blog.urls();
var result = Blog.handleRequest( request );

// find the most recent posts
var recent = db.blog.posts.find({live: true, cls: "entry"}).sort({ts: -1}).limit(5).toArray();
// find the categories
var categories = db.blog.categories.find().sort({label: 1}).toArray();
// Now, it would be lovely if the sort above actually worked, but it doesn't because
// sort doesn't work on non-indexed fields yet.  So, for now, we'll manually sort
// the array.
categories.sort(function(a,b) {
    // defense against the dark npe
    var err;
    if(!a && !b) err = 0; if(!a) err = -1; if(!b) err = 1;
    if(!a.label && !b.label) err = 0; if(!a.label) err = -1; if(!b.label) err = 1;
    if(err) { log.blog.ERROR("db.blog.categories is messed up... some category is null/has a null label"); return err; }

    if(a.label > b.label) return 1;
    else if(a.label < b.label) return -1;
    else return 0;
});

if ( result.posts.length == 1 && result.posts[0].name == "404") {
    core.blog.pieces.post({post: {}, user: user, comments_enabled: false});
    if( user && user.hasPermission( "admin" ) ){
        print("<p>To add some posts, go to admin/blog/post_edit.</p>");
    }
    return;
}

if ( result.posts.length == 1 ){
    var blogObj = {
        post : result.posts[0],
        user : user,
        comments_enabled: result.posts[0].commentsEnabled,
        recent : recent,
        categories : categories
    };

    if(request && request.addComment == "yes") {
        Blog.handlePosts(request, result.posts[0], user);
    }

    core.blog.pieces.post( blogObj );
}
else if (result.posts.length > 1) {
    var blogObj = {
        posts : result.posts,
        date_format : "F",
        user : user,
        recent : recent,
        categories : categories	
    };

	var f = Blog.getTemplate("postSnippetList");	
	f(blogObj);
}

%>
